# Handle TV input changes
- alias: '[Slaapkamer][Mediaplayer] - Handle TV input changes'
  trigger:
    - platform: state
      entity_id: media_player.slaapkamer_tv
      to: 'playing'
      from: 'off'
      for: '00:01:00'
    - platform: state
      entity_id: media_player.stb_arris_uhd_2
      to: 'playing'
      from: 'off'
      for: '00:01:00'
  action:
    # HANDLE THE INPUT CHANGE
    - service: input_select.select_option
      data_template:
        entity_id: input_select.bedroom_tv_input
        option: >-
          {% if (trigger.entity_id == 'media_player.slaapkamer_tv') %}
            Chromecast
          {% elif (trigger.entity_id == 'media_player.stb_arris_uhd_2') %}
            Mediabox
          {% endif %}
    # HANDLE TV STATE (SAFEGAURD FOR MANUAL CONTROL)
    - service: switch.turn_on
      data:
        entity_id: switch.tv_lg

# When Chromecast starts playing
- alias: '[Slaapkamer][Mediaplayer] - Start TV for Chromecast'
  trigger:
    - platform: state
      entity_id: media_player.slaapkamer_tv
      to: 'playing'
  condition:
    - condition: or
      conditions:
        - condition: state
          entity_id: media_player.slaapkamer_tv
          state: 'off'
        - condition: template
          value_template: "{{ states('input_select.bedroom_tv_input') != 'Chromecast' }}"
  action:
    - service: script.bedroom_watch_chromecast

# Nothing playing for 15 minutes, turn off the TV!
- alias: '[Slaapkamer][Mediaplayer] - TV Auto off'
  trigger:
    - platform: state
      entity_id: media_player.slaapkamer_tv
      to: 'off'
      for:
        minutes: 15
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: media_player.slaapkamer_tv
        state: 'off'
      - condition: state
        entity_id: media_player.stb_arris_uhd_2
        state: 'off'
      - condition: state
        entity_id: switch.tv_lg
        state: 'on'
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.tv_lg
    - service: input_select.select_option
      data:
        entity_id: input_select.bedroom_tv_input
        option: 'False'

# 90 minutes after bedtime turn off the TV!
- alias: '[Slaapkamer][Mediaplayer] - TV Auto off sleepmode'
  trigger:
    - platform: state
      entity_id: input_boolean.peter_inbed
      to: 'on'
      for:
        minutes: 90
    - platform: state
      entity_id: input_boolean.sharona_inbed
      to: 'on'
      for:
        minutes: 90
  action:
    - service: script.shutdown_bedroom_mediacenter
    - service: input_select.select_option
      data:
        entity_id: input_select.bedroom_tv_input
        option: 'False'

# Continue watching TV programme
- alias: '[Slaapkamer][Mediaplayer] - Continue watching'
  initial_state: True
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: TRANSFER_TVTO_BEDROOM
  action:
    - service: script.bedroom_transfer
    - condition: template
      value_template: >-
        {{ (is_state('input_boolean.sharona_inbed','on') and is_state('input_boolean.peter_inbed','on')) or
           (is_state('input_boolean.sharona_inbed','on') and is_state('person.peter','not_home')) or
           (is_state('input_boolean.peter_inbed','on') and is_state('person.sharona','not_home')) }}
    - wait_template: "{{is_state('script.bedroom_transfer','off')}}"
    - service: script.shutdown_mediacenter

- alias: '[Slaapkamer][Mediaplayer] - Dont continue watching'
  initial_state: True
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: TRANSFER_NO
  action:
    - condition: template
      value_template: >-
        {{ (is_state('input_boolean.sharona_inbed','on') and is_state('input_boolean.peter_inbed','on')) or
           (is_state('input_boolean.sharona_inbed','on') and is_state('person.peter','not_home')) or
           (is_state('input_boolean.peter_inbed','on') and is_state('person.sharona','not_home')) }}
    - service: script.shutdown_mediacenter
