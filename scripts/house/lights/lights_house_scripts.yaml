####
# Light scripts
####

# Script - Light routine when everybody goes to bed
lights_tobed_all:
  alias: '[Huis][Lights] - To bed routine all persons'
  sequence:
  - data:
      group_name: Woonkamer
      scene_name: Nachtlampje
    service: hue.hue_activate_scene
  - data:
      entity_id: light.keuken
    service: light.turn_off
  - delay: 00:05:00
  - data:
      entity_id: light.woonkamer
    service: light.turn_off


# Script - Light routine when one person goes to bed
lights_tobed_single:
  alias: '[Huis][Lights] - To bed routine single person'
  sequence:
    - service: script.dummy

# Script - Mockupancy
mockupancy:
  alias: '[Huis][Lights] - Mockupancy Vacationmode'
  sequence:
  - condition: state
    entity_id: input_select.house_mode
    state: 'Vakantie'
  - service: input_datetime.set_datetime
    data_template:
      entity_id: input_datetime.mockupancy_bedtime
      time: "{{ (range(22, 23)|random|int) }}:{{ (range(0, 59)|random|int) }}:00"
  - service: script.downstairs_lighting
  - service: script.upstairs_lighting
  - service: notify.ios_iedereen
    data_template:
      title: Vakantiemodus
      message: "Lichtplan gestart met als bedtijd: {{states('input_datetime.mockupancy_bedtime')}}"

downstairs_lighting:
  alias: '[Huis][Lights] - Mockupancy Downstairs'
  sequence:
  - service: hue.hue_activate_scene
    data:
      group_name: Woonkamer
      scene_name: Lake Placid
  - wait_template: "{{ states('sensor.time') == (((state_attr('input_datetime.mockupancy_bedtime' , 'timestamp')) - (60 * 60))|timestamp_custom('%H:%M', false)) }}"
  - service: hue.hue_activate_scene
    data:
      group_name: Keuken
      scene_name: Ontspannen
  - delay: "00:{{ (range(0, 15)|random|int) }}:00"
  - service: light.turn_off
    data:
      entity_id: light.keuken
  - wait_template: "{{ states('sensor.time') == (((state_attr('input_datetime.mockupancy_bedtime' , 'timestamp')) - (20 * 60))|timestamp_custom('%H:%M', false)) }}"
  - service: hue.hue_activate_scene
    data:
      group_name: Keuken
      scene_name: Ontspannen
  - delay: "00:{{ (range(0, 15)|random|int) }}:00"
  - service: light.turn_off
    data:
      entity_id: light.keuken
  - wait_template: "{{ states('sensor.time') == (state_attr('input_datetime.mockupancy_bedtime' , 'timestamp')|int|timestamp_custom('%H:%M', False)) }}"
  - service: script.lights_tobed_all

upstairs_lighting:
  alias: '[Huis][Lights] - Mockupancy Upstairs'
  sequence:
  - wait_template: "{{ states('sensor.time') == (((state_attr('input_datetime.mockupancy_bedtime' , 'timestamp')) - (75 * 60))|timestamp_custom('%H:%M', false)) }}"
  - service: light.turn_on
    data:
      entity_id: light.babykamer
      brightness: 144
  - delay: "00:{{ (range(0, 30)|random|int) }}:00"
  - service: light.turn_on
    data:
      entity_id: light.studeerkamer
      brightness: 144
  - delay: "00:{{ (range(0, 40)|random|int) }}:00"
  - service: light.turn_off
    data:
      entity_id:
        - light.studeerkamer
        - light.babykamer
  - wait_template: "{{ states('sensor.time') == (state_attr('input_datetime.mockupancy_bedtime' , 'timestamp')|int|timestamp_custom('%H:%M', False)) }}"
  - service: hue.hue_activate_scene
    data:
      group_name: Slaapkamer
      scene_name: Gaan slapen
  - delay: "00:{{ (range(0, 25)|random|int) }}:00"
  - service: hue.hue_activate_scene
    data:
      group_name: Slaapkamer
      scene_name: Gaan slapen Peter
  - delay: "00:{{ (range(0, 59)|random|int) }}:00"
  - service: light.turn_off
    data:
      entity_id: light.slaapkamer
  - service: notify.ios_iedereen
    data:
      title: Vakantiemodus
      message: "Lichtplan beeindigd, alle lampen staan uit."
