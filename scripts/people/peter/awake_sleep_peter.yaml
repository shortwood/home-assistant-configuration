# Script - When Peter is going to bed
peter_tobed:
  alias: '[Huis] - Peter naar bed'
  sequence:
  - data:
      entity_id: input_boolean.peter_inbed
    service: input_boolean.turn_on
  - service: notify.mobile_app_iphone_van_peter
    data_template:
      title: 'Welterusten!'
      message: >-
        {% if is_state('media_player.stb_arris_uhd','playing') and is_state('media_player.stb_arris_uhd_2','off') %}
          Wil je {{state_attr('media_player.stb_arris_uhd','media_title')}} op {{state_attr('media_player.stb_arris_uhd','source')}} verder kijken in de slaapkamer?
        {% else %}
          Slaap lekker
        {% endif %}
      data:
        push:
          category: >-
            {% if is_state('media_player.stb_arris_uhd','playing') and is_state('media_player.stb_arris_uhd_2','off') %}
              "continue_watching"
            {% else %}
              "none"
            {% endif %}
  - service_template: >-
        {% if (is_state('input_boolean.sharona_inbed','on') or (states('person.sharona') != 'home')) %}
          script.lights_tobed_all
        {% else %}
          script.lights_tobed_single
        {% endif %}
  - service_template: >-
        {% if (is_state('input_boolean.sharona_inbed','on') or (states('person.sharona') != 'home')) and is_state('media_player.woonkamer','playing') %}
          media_player.media_stop
        {% else %}
          script.dummy
        {% endif %}
    data:
      entity_id: media_player.woonkamer
  - condition: template
    value_template:  "{{ states('media_player.mediacenter_woonkamer') != 'off' }}"
  - wait_template: "{{ is_state('media_player.stb_arris_uhd_2','playing') }}"
    timeout: "00:00:20"
  - service_template: >-
      {% if (is_state('input_boolean.sharona_inbed','on') or (states('person.sharona') != 'home')) %}
        script.shutdown_mediacenter
      {% else %}
        script.dummy
      {% endif %}

#Script - Peter wakes up
peter_awake:
  alias: '[Huis] - Peter is wakker'
  sequence:
  - data:
      entity_id: input_boolean.peter_inbed
    service: input_boolean.turn_off
  - service: notify.mobile_app_iphone_van_peter
    data:
      title: 'Goedemorgen Peter'
      message: 'Hoe wil je wakker worden?'
      data:
        push:
          category: "peter_awake"
  - wait_template: "{{ is_state('sensor.roompresence_peter','Woonkamer') }}"
    timeout: "00:30:00"
    continue_on_timeout: false
  - service: media_player.volume_set
    data:
      entity_id: media_player.woonkamer
      volume_level: 0.5
  - service: tts.google_cloud_say
    data_template:
      message: "Goedemorgen Peter, het is {{states('sensor.time')}}, de temperatuur is {{state_attr('weather.huis','temperature')}} graden en de huidige reistijd naar jouw werk is: {{states('sensor.reistijd_peter_werk')}} minuten."
      entity_id: media_player.woonkamer
